# SPDX-License-Identifier: GPL-2.0+

variables:
  DEFAULT_ALL_TAG: "all"
  DEFAULT_ARM64_TAG: "arm64"
  DEFAULT_FAST_ARM64_TAG: "fast arm64"
  DEFAULT_AMD64_TAG: "amd64"
  DEFAULT_FAST_AMD64_TAG: "fast amd64"
  MIRROR_DOCKER: docker.io
  SJG_LAB: "1"
  PLATFORM: linux/amd64,linux/arm64

default:
  tags:
    - ${DEFAULT_ALL_TAG}

workflow:
  rules:
    - when: always

# Grab our configured image.  The source for this is found
# in the u-boot tree at tools/docker/Dockerfile
image: ${MIRROR_DOCKER}/trini/u-boot-gitlab-ci-runner:jammy-20240911.1-08Dec2024

# We run some tests in different order, to catch some failures quicker.
stages:
  - sjg-lab

.lab_template: &lab_dfn
  stage: sjg-lab
  rules:
    - if: $SJG_LAB == "1"
      when: always
    - if: $SJG_LAB != "1"
      when: manual
      allow_failure: true
  dependencies: []
  tags: [ 'lab' ]
  script:
    # Environment:
    #   SRC  - source tree
    #   OUT  - output directory for builds
    - export SRC="$(pwd)"
    - export OUT="${SRC}/build/${BOARD}"
    - export PATH=$PATH:~/bin
    - export PATH=$PATH:/vid/software/devel/ubtest/u-boot-test-hooks/bin

    # Load it on the device
    - ret=0
    - echo "role ${ROLE}"
    - export strategy="-s uboot -e off"
    - export USE_LABGRID_SJG=1
    # export verbose="-v"
    - ${SRC}/test/py/test.py --role ${ROLE} --build-dir "${OUT}"
        --capture=tee-sys -k "not bootstd" || ret=$?
    - U_BOOT_BOARD_IDENTITY="${ROLE}" u-boot-test-release || true
    - if [[ $ret -ne 0 ]]; then
        exit $ret;
      fi
  artifacts:
    when: always
    paths:
      - "build/${BOARD}/test-log.html"
      - "build/${BOARD}/multiplexed_log.css"
    expire_in: 1 week

snow:
  variables:
    ROLE: snow
  <<: *lab_dfn
